apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ include "node-normalization-webserver.fullname" . }}-service-sub-path
  labels:
    {{- include "node-normalization-webserver.selectorLabels" . | nindent 4 }}
  annotations:
    # kubernetes.io/ingress.class: "{{ .Values.ingress.class }}"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 256m
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/whitelist-source-range: "0.0.0.0/0,::/0"
spec:
  tls:
  - hosts:
      - nodenormalization.apps.renci.org
    secretName: nodenormalization.apps.renci.org-tls
  rules:
    - host: {{ .Values.ingress.hostName | quote }}
      http:
        paths:
          - path: "/1.2(/|$)(.*)"
            backend:
              serviceName: {{ include "node-normalization-webserver.fullname" . }}-service-sub-path-trapi1-2
              servicePort: {{ .Values.web.port }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ include "node-normalization-webserver.fullname" . }}-service-root
  labels:
    {{- include "node-normalization-webserver.selectorLabels" . | nindent 4 }}
  annotations:
    # kubernetes.io/ingress.class: "{{ .Values.ingress.class }}"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 256m
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/whitelist-source-range: "0.0.0.0/0,::/0"
spec:
  tls:
  - hosts:
      - nodenormalization.apps.renci.org
    secretName: nodenormalization.apps.renci.org-tls
  rules:
    - host: {{ .Values.ingress.hostName | quote }}
      http:
        paths:
          - path: "/"
            backend:
              serviceName: {{ include "node-normalization-webserver.fullname" . }}-service-root
              servicePort: {{ .Values.web.port }}