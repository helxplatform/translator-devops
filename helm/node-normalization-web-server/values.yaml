# Default values for node-normalization-loader.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Default values for node-normalization-loader.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: ghcr.io/translatorsri/nodenormalization
  tag: v2.3.2
  pullPolicy: Always

web:
  port: 8080
  service:
    type: ClusterIP
  serverHostName: "http(s)://#####"
  securityContext: {}
  configPath: "/code/redis_config.yaml"
  # exra Args for uvicorn
  extraArgs:
    - "--workers"
    - "16"
    - "--timeout"
    - "300"
  autoscaling:
    enabled: true
    # high availability low mem and cpu pods.
    minReplicas: 20
    maxReplicas: 20
    # 80 % utilization
    targetCPU: 50
    targetMemory: 80
  # readiness and liveness probe will start if startup succeeds
  # well bmt costs startup time so... high threshold here.
  startupProbe:
    enabled: true
    config:
      periodSeconds: 1
      timeoutSeconds: 1
      successThreshold: 1
      # to be able to detect pod started asap  pinged every second, but not cause restart
      failureThreshold: 1500
  # if rediness probe fails no requests will be routed to the pod
  readinessProbe:
    enabled: true
    config:
      periodSeconds: 1
      timeoutSeconds: 1
      # to make sure that if a worker got booted
      # we need to be sure before we start routing to that pod.
      successThreshold: 1
      failureThreshold: 1
  # if liveliness prob fails pod is restarted
  livenessProbe:
    enabled: true
    config:
      periodSeconds: 5 # five seconds
      timeoutSeconds: 30
      successThreshold: 1
      # if a pod fails twice on /docs we boot it.
      failureThreshold: 2
resources:
  limits:
    memory: 5Gi
#     cpu: 1500m
  requests:
    memory: 5Gi
    cpu: 500m

ingress:
  class:
  # same as web.serverHostName
  hostName: #####
  trapiVersion: "1.3"
  annotations:
    # kubernetes.io/ingress.class: "{{ .Values.ingress.class }}"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 512m
    nginx.org/proxy-connect-timeout: 300s
    nginx.org/proxy-read-timeout: 300s
    nginx.org/proxy-send-timeout: 300s
  pathType: "Prefix"
  tls: []
#   - hosts:
#       - nodenormalization-dev.apps.renci.org
#     secretName: nodenormalization-dev.apps.renci.org-tls

redis_backend_config:
  "eq_id_to_id_db":
    "ssl_enabled": false
    "is_cluster": false
    "db": 0
    "hosts":
      # list of cluster member ips and ports
      - "host_name": "####"
        "port": "#####"
    "password": "######"
  "id_to_eqids_db":
    "ssl_enabled": false
    "is_cluster": false
    "db": 0
    "hosts":
      - "host_name": "####"
        "port": "#####"
    "password": "######"
  "id_to_type_db":
    "ssl_enabled": false
    "is_cluster": false
    "db": 0
    "hosts":
      - "host_name": "####"
        "port": "#####"
    "password": "######"
  "curie_to_bl_type_db":
    "ssl_enabled": false
    "is_cluster": false
    "db": 0
    "hosts":
      - "host_name": "####"
        "port": "#####"
    "password": "######"
  "gene_protein_db":
    "ssl_enabled": false
    "is_cluster": false
    "db": 0
    "hosts":
      - "host_name": "####"
        "port": "#####"
    "password": "######"

x_trapi:
  maturity:
    value: "maturity"
  location:
    value: "location"
