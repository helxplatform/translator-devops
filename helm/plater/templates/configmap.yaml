{{- $open_api_config := toYaml .Values.app.openapi_config -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "plater.fullname" . }}-configmap
  labels:
    {{- include "plater.labels" . | nindent 4 }}
data:
  check_neo.sh: |-
    #!/bin/sh
    response=$(wget --server-response --spider --quiet "http://${NEO4J_HOST}:${NEO4J_HTTP_PORT}" 2>&1 | awk 'NR==1{print $2}')
    until [ "$response" = "200" ]; do
        response=$(wget --server-response --spider --quiet "http://${NEO4J_HOST}:${NEO4J_HTTP_PORT}" 2>&1 | awk 'NR==1{print $2}') >&2
        echo "  -- Neo4j  is unavailable - sleeping"
        sleep 3
    done
  download_data.sh: |-
    #!/bin/bash
    set -x
    wget -O /data/db.dump ${NEO4J_DATA_URL}
    touch /data/done
  seed_db.sh: |-
    #!/bin/bash
    set -x
    FILE=/data/db.dump
    DATADIR=/data/databases
    until [ -f "$FILE" ]; do
        echo "$FILE doesn't exist. Please copy to database dump file to $FILE"
        echo "sleeping..."
        sleep 3
    done
    echo "$FILE found"
    echo "clearing previous database file if any..."
    # Make dir if they don't exist
    mkdir -p /data/databases
    mkdir -p /data/transactions
    mkdir -p /data/dbms
    # clear out data from dir if they were present
    rm -rf /data/dbms/*
    rm -rf /data/databases/*
    rm -rf /data/transactions/*
    # load dump file
    neo4j-admin load --from $FILE
  dataset-desc.json: |
    {{ .Values.datasetDesc | toJson }}
  openapi-config.yaml: |-
{{ tpl $open_api_config . | indent 4 }}
  skip_attr.json: |
    {{ .Values.skip_attributes | toJson }}