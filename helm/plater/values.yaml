# Default values for plater.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  plater:
    repository: renciorg/plater-clustered
    tag: "latest"
    imagePullPolicy: Always
  neo4j:
    repository: renciorg/neo4j-4.2-apoc-gds
    tag: latest
    imagePullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

neo4j:
  # Readiness probes will send a kill signal to the container if
  # it fails enough times.  It's therefore very important
  # that initialDelaySeconds give the cluster time to form, because
  # if readiness probes start immediately after container start,
  # they may end up not forming quickly enough and getting killed.
  readinessProbe:
    initialDelaySeconds: 30
    failureThreshold: 3
    timeoutSeconds: 2
    periodSeconds: 10
    exec:
      command:
        - bash
        - -c
        - IFS="/" read -a auth <<< $NEO4J_AUTH ; cypher-shell -u ${auth[0]} -p ${auth[1]} "match (c) return count(c)"

  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 10
    failureThreshold: 3
    timeoutSeconds: 2
    exec:
      command:
        - bash
        - -c
        - IFS="/" read -a auth <<< $NEO4J_AUTH ; cypher-shell -u ${auth[0]} -p ${auth[1]} "match (c) return count(c)"

  # Startup probes are used to know when a container application has started.
  # If such a probe is configured, it disables liveness and readiness checks until it succeeds
  startupProbe:
    failureThreshold: 2000
    periodSeconds: 25
    exec:
      command:
        - bash
        - -c
        - IFS="/" read -a auth <<< $NEO4J_AUTH ; cypher-shell -u ${auth[0]} -p ${auth[1]} "match (c) return count(c)"

service:
  type: ClusterIP
app:
  gunicorn:
    worker_timeout: 600
    num_workers: 4
  port: 8080
  automatAddress: http://automat
  bl_version: 1.8.2
  neo4j:
    httpPort: 7474
    boltPort: 7687
    password: neo4jkp
    username: neo4j

    # These are jvm based values hence suffix with one of the following G, M etc...
    heapSize:
    pageCacheSize:
    # It's used to request the cluster for memory capable of running neo4j per the heap and PageCache values above
    # Compute this value by summing up heapSize + pageCacheSize + (1G for os)
    # https://neo4j.com/docs/operations-manual/current/performance/memory-configuration/
    totalMemory:
    storage:
      size: 20Mi
    service:
      type: ClusterIP
  openapi_config:
  # Adds more configs to default open api config
    x-translator:
      component: KP
      team:
      - '' # add teams
    contact:
      email: "" # email
      name: "" # name
      x-id: "" # link if available
      x-role: "" # role
    termsOfService: "" # link to terms of service
    title: ""
    description: ""
    tags:
     - name: translator
    servers:
      - description: Default server
        # this value should match chart installation name
        # https://automat-dev.renci.org/<chart install name>
        url: ""
dataUrl: ""
datasetDesc:
  version: ''
  description: ''
  dataseturl: ''
  generatorCode: ''
  neo4j_dump: ""
  provenanceTag: "infores:automat.platersource"
  license: "" # link to terms of service