1. Get the application URL by running these commands:

{{- if contains "NodePort" .Values.web.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "r3.fullname" . }}-web-service )
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.web.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "r3.fullname" . }}-web-service'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "r3.fullname" . }}-web-service --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.web.service.port }}
{{- else if contains "ClusterIP" .Values.web.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "r3.name" . }},app.kubernetes.io/instance={{ .Release.Name }},service-type=webserver" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:80
{{- end }}
{{- if .Values.redis.seedDB }}
2. SeedDb is true, to add data to the pod please use the following commands
    export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "r3.name" . }},app.kubernetes.io/instance={{ .Release.Name }},service-type=database" -o jsonpath="{.items[0].metadata.name}")
    kubectl --namespace {{ .Release.Namespace }} cp <path-to-dump.rdb> $POD_NAME:/data/ -c {{ include "r3.fullname" . }}-redis-seed-container
{{- end }}