# Default values for aragorn.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/ranking-agent/aragorn
  tag: latest

web:
  serverHostName: "serverHostName"

deploymentStrategy: Recreate

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 8080

ingress:
  host: ingress_HOST
  class: ""
  enabled: true
  pathType: "ImplementationSpecific"
  path: "/1.4"
  annotations:
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "86400"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "86400"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      keepalive_timeout 86400;
    nginx.ingress.kubernetes.io/connection-proxy-header: keep-alive
    nginx.ingress.kubernetes.io/send-timeout: "86400"
    nginx.ingress.kubernetes.io/service-upstream: 'true'
    nginx.ingress.kubernetes.io/upstream-keepalive-timeout: "86400"
    nginx.ingress.kubernetes.io/proxy-body-size: 512m
    nginx.ingress.kubernetes.io/tags: Name=transltr-eks-ci-blue-aragorn,environment=ci,org=ncats,project=translator,program=Translator,access-team=ncats-devops
  tls:
    enabled: false

app:
  port: 4321
  debugTiming: "True"
  multistrider_batch_size: 75
  maximum_multistrider_rules: 75
  workerTimeout: 600
  resources:
    requests:
      memory: 2Gi
      cpu: 1000m
    limits:
      memory: 15Gi
      cpu: 1000m
  logLevel: "trace"
  logStorageSize: 5Gi
  queueStorageSize: 10Gi
  sqliteStoragePath: "/repo/aragorn/data"
  sqliteStorageSize: 100Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

x_trapi:
  maturity:
    value: "maturity"
  location:
    value: "location"

sub_processes:
  strider_url: "strider"
  answer_coalesce_url: "ac"
  ranker_url: "ranker"
  node_norm_url: "nn"
  robokop_kg_url: "robokopkg"

otel:
  # disable otel by default
  enabled: false
  jaeger_host: "jaeger-otel-agent"
  jaeger_port: "6831"
  service_name: "ARAGORN"

rbtmq:
  resources:
    limits:
      memory: 1Gi
    requests:
      memory: 300M
  image:
    repository: renciorg/aragorn-rbtmq
    tag: 0.0.1
  storage:
    createPV: false
    createPVC: false
    pvName: "pv-rbtmq"
    size: 1Gi
  secrets:
    amqpPort: 5672
    webPort: 15672
    queueUser: "fakeuser"
    queuePassword: "fakepw"
    queueAdminPassword: "fakeadminpw"
    queueHost: "fakehost"

### REDIS config

redis:
  image:
    tag: latest
    repository: redis
  dbPath: /data
  db: 0
  password: fillthisin
  service:
    port: 6379
    type: ClusterIP
  resources:
    limits:
      memory: 58Gi
    requests:
      memory: 58Gi
  persistence:
    storageClass: ""
    size: 58Gi
  args:
    - --maxmemory
    - '58gb'
    - --maxmemory-policy
    - 'allkeys-lfu'
    - --loglevel
    - 'notice'
    - --logfile
    - '/data/aragorn_cache.log'
    - --stop-writes-on-bgsave-error
    - 'no'
    - --dbfilename
    - 'aragorn_cache.rdb'
    - --proto-max-bulk-len
    - '1000mb'
    - --activedefrag
    - 'yes'
    - --timeout
    - '60'
  nodeSelector: {}
  tolerations: []
  affinity: {}
