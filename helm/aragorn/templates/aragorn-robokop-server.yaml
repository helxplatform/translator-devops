apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "aragorn.fullname" . }}-aragorn-robokop-server
  labels:
    {{- include "aragorn.labels" . | nindent 4 }}
    app-name: aragorn-robokop
    app: {{ include "aragorn.fullname" . }}
spec:
  serviceName: {{ include "aragorn.fullname" . }}-aragorn-robokop-service
  selector:
    matchLabels:
      {{- include "aragorn.selectorLabels" . | nindent 6 }}
      app: {{ include "aragorn.fullname" . }}
      app-name: aragorn-robokop
  template:
    metadata:
      labels:
        {{- include "aragorn.selectorLabels" . | nindent 8 }}
        app-name: aragorn-robokop
        app: {{ include "aragorn.fullname" . }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/env-config-map.yaml") . | sha256sum }}
    spec:
      securityContext:
        runAsUser: 1001
        fsGroup: 2000
        runAsGroup: 3000
      initContainers:
       - name: {{ .Chart.Name }}-init-sqlite
         image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
         imagePullPolicy: Always
         envFrom:
           - configMapRef:
               name: {{ include "aragorn.fullname" . }}-configmap
         command:
           - "python"
         args:
           - "/repo/aragorn/src/process_db.py"
         volumeMounts:
           - name: {{ include "aragorn.fullname" . }}-sqlite-store
             mountPath: {{ .Values.app.sqliteStoragePath }}
      containers:
        - name: {{ .Chart.Name }}-web-server
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: {{ include "aragorn.fullname" . }}-configmap

          env:
          - name: CALLBACK_HOST
            value: http://{{ include "aragorn.fullname" . }}-aragorn-robokop-service:{{ .Values.service.port }}/robokop
          command:
            - 'gunicorn'
          args:
            - "-b"
            - "0.0.0.0:{{ .Values.app.port }}"
            - "-w"
            - "4"
            - "-k"
            - "uvicorn_custom.SubPathWorker"
            - "--timeout"
            - "{{ .Values.app.workerTimeout }}"
            {{ if .Values.app.logLevel }}
            - "--log-level"
            - {{ .Values.app.logLevel}}
            {{ end  }}
            - "src.robokop_app:ROBOKOP_APP"
          ports:
            - name: http
              protocol: TCP
              containerPort: {{ .Values.app.port }}
          volumeMounts:
            - mountPath: /repo/aragorn/logs
              name: {{ include "aragorn.fullname" . }}-logs
            - mountPath: /repo/aragorn/queue-files
              name: {{ include "aragorn.fullname" . }}-queue-files
            - name: {{ include "aragorn.fullname" . }}-gunicorn-conf
              mountPath: /repo/aragorn/uvicorn_custom.py
              subPath: uvicorn_custom_robokop.py
            - name: {{ include "aragorn.fullname" . }}-sqlite-store
              mountPath: {{ .Values.app.sqliteStoragePath }}
          resources:
            {{- toYaml .Values.app.resources | nindent 12 }}
      volumes:
      - name: {{ include "aragorn.fullname" . }}-gunicorn-conf
        configMap:
          name: {{ include "aragorn.fullname" . }}-gunicorn-conf
          defaultMode: 0777
      - name: {{ include "aragorn.fullname" . }}-sqlite-store
        ephemeral:
          volumeClaimTemplate:
            spec:
              accessModes: [ "ReadWriteOnce" ]
              resources:
                requests:
                  storage: {{ .Values.app.sqliteStorageSize }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "aragorn.fullname" . }}-logs
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 5Gi
    - metadata:
        name: {{ include "aragorn.fullname" . }}-queue-files
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.app.queueStorageSize }}