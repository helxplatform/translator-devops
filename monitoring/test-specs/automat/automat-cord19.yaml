config:
  target: "{{ $processEnvironment.SERVER_URL }}"
  timeout: 30
  phases:
    - duration: 1
      arrivalRate: 1
  plugins:
    expect:
     outputFormat: "prettyError"
  payload:
    path: "data/automat/automat-cord19-data.csv"
    order: iterate
    skipHeader: true
    fields:
      - n0Curie
      - n0Type
      - n1Type
      - predicate
scenarios:
  - flow:
      # test apidocs
      - get:
          url: "/cord19/1.2/openapi.json"
          trapi:
          - test: ok
          expect:
            - statusCode: 200
      - post:
          url: /cord19/1.2/query
          capture:
           - json: "$.message.knowledge_graph.edges[*]"
             as: kgEdges
           - json: "$.message.knowledge_graph.nodes[*]"
             as: kgNodes
          expect:
           - statusCode: 200
           # check if query node is returned , basically atleast on answer is back
           - hasProperty: message.knowledge_graph.nodes["{{ n0Curie }}"].categories
          # Trapi Payload as yaml
          json:
            message:
              query_graph:
                nodes:
                  n0:
                    ids:
                    - "{{ n0Curie }}"
                    categories:
                    - "{{ n0Type }}"
                  n1:
                    categories:
                    - "{{ n1Type }}"
                edges:
                  e01:
                    subject: n0
                    object: n1
                    predicates:
                    - "{{ predicate }}"
            workflow:
            - id: lookup
              parameters:
